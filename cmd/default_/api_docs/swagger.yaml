definitions:
  api.CreateUserMsg:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  api.UpdateUserMsg:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
    type: object
  echoServer.RespBody:
    properties:
      msg:
        type: string
      result: {}
      status:
        type: integer
    type: object
  userMgr.ExampleUserModel:
    properties:
      created:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updated:
        type: integer
    type: object
host: 127.0.0.1:80
info:
  contact:
    email: contact@domain.com
    name: Support
    url: https://domain.com
  description: api example
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://domain.com
  title: api example
  version: "1.0"
paths:
  /api/health:
    get:
      description: health check
      produces:
      - application/json
      responses:
        "200":
          description: result
          schema:
            allOf:
            - $ref: '#/definitions/echoServer.RespBody'
            - properties:
                data:
                  type: integer
              type: object
      summary: health check
      tags:
      - health
  /api/user/create:
    post:
      consumes:
      - application/json
      description: creat user
      parameters:
      - description: new user info
        in: body
        name: msg
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserMsg'
      produces:
      - application/json
      responses:
        "200":
          description: result
          schema:
            allOf:
            - $ref: '#/definitions/echoServer.RespBody'
            - properties:
                result:
                  $ref: '#/definitions/userMgr.ExampleUserModel'
              type: object
      security:
      - ApiKeyAuth: []
      summary: creat user
      tags:
      - user
  /api/user/get/{id}:
    get:
      description: get user
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: result
          schema:
            allOf:
            - $ref: '#/definitions/echoServer.RespBody'
            - properties:
                result:
                  $ref: '#/definitions/userMgr.ExampleUserModel'
              type: object
      security:
      - ApiKeyAuth: []
      summary: get user
      tags:
      - user
  /api/user/update:
    post:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: update user info
        in: body
        name: msg
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserMsg'
      produces:
      - application/json
      responses:
        "200":
          description: result
          schema:
            $ref: '#/definitions/echoServer.RespBody'
      security:
      - ApiKeyAuth: []
      summary: update user
      tags:
      - user
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
